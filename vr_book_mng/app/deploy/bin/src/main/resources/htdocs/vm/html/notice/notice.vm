<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
#parse("content/importBase.vm")
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
<style type="text/css">
	#preview > img{
		width:100%;
		height:170px;
	}
</style>
</head>
<body style="width: 100%; height: 100%;">
	<div id="page-wrapper">
		<!--BEGIN TITLE & BREADCRUMB PAGE-->
		<div id="title-breadcrumb-option-demo" class="page-title-breadcrumb">
			<div class="page-header pull-left">
				<div class="page-title">公告管理</div>
			</div>
			<ol class="breadcrumb page-breadcrumb pull-right">
				<li><i class="fa fa-home"></i>&nbsp;<a href="#">公告管理</a></li>
			</ol>
			
			<div class="clearfix"></div>
		</div>
	

			<div style="margin-top: 2%;" id="a">
				<label class="col-sm-1 control-label"
					style="text-align: right; margin-top: 5px">类型：</label>
				<div class="col-sm-2">
					<div class="control-group">
						<select class="form-control" id="selecttype">
      						<option selected="selected" value="">请选择</option>
      						<option value="0">首页公告</option>
      						<option value="1">圈子公告</option>
      					</select>
						<br />
					</div>
				</div>
			</div>
			
				<div >
					<input type="button"  onclick="clean()"  class="btn btn-danger" name="Name" id="search_tel" value="清空" style="float: right;margin-right: 2%;"/>
				</div>
				<div >
					<input type="button"  onclick="sorce()"   class="btn btn-info" name="Name" id="search_tel" value="查询" style="float: right;margin-right: 2%;"/>
				</div>
				<div >
					<input type="button"  onclick="showallmodal('myModal','show')"   class="btn btn-success" name="Name" id="search_tel" value="添加" style="float: right;margin-right: 2%;"/>
				</div>
				
		<!--END TITLE & BREADCRUMB PAGE-->
		<!--BEGIN CONTENT-->
		<table id="mytab" class="table table-hover"></table>
		<div class="modal fade" id="myModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    		<div class="modal-dialog">
        		<div class="modal-content">
            		<div class="modal-header">
                		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                		<h4 class="modal-title" id="myModalLabel">添加公告</h4>
            		</div>
            		<div class="modal-body">
            			<form class="form-horizontal" role="form" name="noticeform"  method="post">
      							<div class="form-group">
        							<label for="lastname" class="col-sm-2 control-label">类型：</label>
            						<div class="col-sm-10">
										<input  type="hidden"  id="id" value="0" name="id" />
										<select class="form-control" id="type" name="type">
                      						<option value="">请选择</option>
                      						<option value="0">首页公告</option>
                      						<option value="1">圈子公告</option>
                      					</select>
        							</div>
								</div>
								<div class="form-group">
        							<label for="lastname" class="col-sm-2 control-label">排列顺序：</label>
            						<div class="col-sm-10">
        								<input type="number" id="rank" name="rank" class="form-control" min="1" 
											onkeyup="this.value=this.value.replace(/\D/g,'')"   
											onafterpaste="this.value=this.value.replace(/\D/g,'')" value="1"/> 
        							</div>
								</div>
								<div class="form-group">
        							<label for="lastname" class="col-sm-2 control-label">公告内容：</label>
            						<div class="col-sm-10">
										<textarea class="form-control" id="noticeContent" name="noticeContent" placeholder="最多30字符，详细内容请使用下面编辑器"></textarea>
        							</div>
								</div>
								<div id="editor" style="width: 100%">
									<!-- <p>
										欢迎使用 <b>wangEditor</b>编辑您的页面内容
									</p> -->
								</div>
								<div class="form-group">
        							<label for="lastname" class="col-sm-2 control-label">备注：</label>
            						<div class="col-sm-10">
										<textarea class="form-control" id="memo" name="memo"></textarea>
        							</div>
								</div>
                          
						</form>
            		</div>
            		<div class="modal-footer">
                		<button type="button" id="submitReply" class="btn btn-primary" onclick="submitnotice()">确定</button>
                		<button type="button" class="btn btn-danger" data-dismiss="modal">关闭</button>
            		</div>
        		</div>
    		</div>
		</div>
	</div>
</body>
<script type="text/javascript" src="js/wangEditor/wangEditor.js"></script>
<script type="text/javascript">
		var E = window.wangEditor
		var editor = new E('#editor')
		// 或者 var editor = new E( document.getElementById('editor') )
		// 隐藏“网络图片”tab
		editor.customConfig.showLinkImg = false
		// 关闭粘贴样式的过滤
		editor.customConfig.pasteFilterStyle = false
		//editor.customConfig.debug = location.href.indexOf('wangeditor_debug_mode=1') > 0
		// 下面两个配置，使用其中一个即可显示“上传图片”的tab。但是两者不要同时使用！！！
		// editor.customConfig.uploadImgShowBase64 = true   // 使用 base64 保存图片
		// 上传图片（举例）
	    editor.customConfig.uploadImgServer = 'fileUploadForEditor.do';
	    //限制上传图片数 
	    editor.customConfig.uploadImgMaxLength = 1;
	    
	    editor.customConfig.uploadImgParams = {
	    	    token: 'abcdef12345'  // 属性值会自动进行 encode ，此处无需 encode
	    }
	    
	    editor.customConfig.uploadFileName = 'photo'
	    
	    editor.customConfig.uploadImgHeaders = {
	    	    'Accept': 'text/x-json'
	    }
	    
	    editor.customConfig.uploadImgHooks = {
	    	    before: function (xhr, editor, files) {
	    	        // 图片上传之前触发
	    	        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件
	    	        
	    	        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传
	    	        // return {
	    	        //     prevent: true,
	    	        //     msg: '放弃上传'
	    	        // }
	    	    },
	    	    success: function (xhr, editor, result) {
	    	        // 图片上传并返回结果，图片插入成功之后触发
	    	        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
	    	        //alert(result.data);
	    	        
	    	    },
	    	    fail: function (xhr, editor, result) {
	    	        // 图片上传并返回结果，但图片插入错误时触发
	    	        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
	    	    	//alert(result);
	    	    },
	    	    error: function (xhr, editor) {
	    	        // 图片上传出错时触发
	    	        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
	    	    },
	    	    timeout: function (xhr, editor) {
	    	        // 图片上传超时时触发
	    	        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
	    	    },

	    	    // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置
	    	    // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）
	    	    customInsert: function (insertImg, result, editor) {
	    	        // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）
	    	        // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果

	    	        // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：
	    	        var url = result.data
	    	        insertImg(url)

	    	        // result 必须是一个 JSON 格式字符串！！！否则报错
	    	    }
	    }
		editor.create()
	</script>

<script type="text/javascript">
//保存
function submitnotice(){
	if ($("#type").val() == "") {
		alert("请选择类型！");
		return;
	}
	var formData = new FormData();
	formData.append("id", $("#id").val());
	formData.append("type", $("#type").val());
	formData.append("rank", $("#rank").val());
	formData.append("memo", $("#memo").val());
	formData.append("html", editor.txt.html());
	formData.append("noticeContent", $("#noticeContent").val());
	jQuery.ajax({
		type:"post",
        url:($("#id").val()=="0") ? "addnotice.do" : "updatenotice.do",
        dataType:"json",
        data : formData,
        cache : false,
        processData : false,
		contentType : false,
        success:function(data){
            if(!data.bizSucc){
                alert(data.err_msg);
                return false;
            }else{
				alert(data.data);
				//做一次缓存清除 防止多次修改出现的BUG
				claenmyModal();
				$("#myModal").modal("hide");
				$("#mytab").bootstrapTable('refresh');
            }
            
        },
        error:function(e){
            alert("异常!");
            //$(".loading").css("display","none");
        }
	});
	
/* 	$("form[name='noticeform']").ajaxSubmit({
	        type:"post",
	        url:($("#id").val()=="0") ? "addnotice.do" : "updatenotice.do",
	        dataType:"json",
	        beforeSubmit:function(){
	        },
	        success:function(data){
	            if(!data.bizSucc){
	                alert(data.err_msg);
	                return false;
	            }else{
					alert(data.data);
					//做一次缓存清除 防止多次修改出现的BUG
					claenmyModal();
					$("#myModal").modal("hide");
					$("#mytab").bootstrapTable('refresh');
	            }
	            
	        },
	        error:function(e){
	            alert("异常!");
	            //$(".loading").css("display","none");
	        }
	    }); */
}
function claenmyModal(){
	$("#myModal input").val("");
	$("#myModal select").val("");
	$("#myModal textarea").val("");
	$("#id").val("0");
	editor.txt.html("");
}

function clean(){
	$("#a input").val("");
	$("#a select").val("");
}
function sorce(){
	$('#mytab').bootstrapTable("selectPage",1);	
}
var all;
//生成用户数据
$('#mytab').bootstrapTable({
    method: 'post',
    contentType: "application/x-www-form-urlencoded",//必须要有！！！！
    url:"sellectallnotice.do",//要请求数据的文件路径
    dataType : 'json',
    striped: true, //是否显示行间隔色
  	pageNumber: 1, //初始化加载第一页，默认第一页
    pageSize:10,//单页记录数
    pageList:[5,10,20,30],//分页步进值
    pagination:true,//是否分页
    queryParamsType:'limit',//查询参数组织方式
    sidePagination:'server',//指定服务器端分页
    queryParams: function(p){
    	 return params(p);
    },
  	
    clickToSelect: true,//是否启用点击选中行
    toolbarAlign:'right',//工具栏对齐方式
    buttonsAlign:'right',//按钮对齐方式
    toolbar:'#toolbar',//指定工作栏
    columns:[
        {
            title:'类型',
            field:'TYPE',
			formatter:function (value,row,index){
            	if(value==0)
					return "首页公告";
				
				if(value==1)
					return "圈子公告";
            }
			
        },
        {
            title:'公告内容',
            field:'NOTICE_CONTENT',
			formatter: function (value,row,index){
				return value.substr(0,20)+"...";
			}
        },
        {
            title:'排序',
            field:'RANK',
        },
        {
            title:'操作',
            field:'ID',
            formatter: function (value,row,index){
                return "<a href='#' onclick=updateshownotice('"+index+"')>修改</a>  | <a href='#' onclick=deletenotice('"+value+"')>删除</a>";
            }
        }
    ],
    locale:'zh-CN',//中文支持,
    responseHandler:function(res){
        //在ajax获取到数据，渲染表格之前，修改数据源
		all = res.rows;
        return res;
    }
})
//删除
function deletenotice(ID){
	if(confirm("确定删除此信息？删除后不可恢复")){
		   jQuery.ajax({
				 url : "deletealltablebyid.do",
				 type : 'post',
				 data:{"id":ID,"table":"dxs_sys_notice"},
				 dataType : 'json',
				 success : function(json) {
				 if (json) {
					 alert("删除成功");
					 $("#mytab").bootstrapTable('refresh');
				 } 
				 else{
					 alert("删除失败");
				 }
				 },
				 error : function() {  
				            alert("异常！");  
				     }  
		});
	}else{
		return ;
	}
}
//显示添加框
function showallmodal(id,type){
	claenmyModal();
	$("#"+id).modal(type);
}
//显示放大图片
function imgbig(url){
	$('#imgbig').modal('show');
	$("#bigbis").attr('src',url);
}
//显示修改框
function updateshownotice(number){
	claenmyModal();
	$("#type").val(all[number].TYPE);
	$("#rank").val(all[number].RANK);
	$("#memo").val(all[number].MEMO);
	$("#id").val(all[number].ID);
	$("#noticeContent").val(all[number].NOTICE_CONTENT);
	$("#preview").html("<img src="+all[number].HTML+" />");
	$("#preview").css("display", "block");
	editor.txt.html(all[number].HTML);
	$("#myModal").modal("show");
}
//通过
function adopt(ID,type,memo){
	if(confirm("确定当前操作？确定后不可恢复")){
		   jQuery.ajax({
				 url : "updateusercaaount.do",
				 type : 'post',
				 data:{"ID":ID,"type":type,"memo":memo},
				 dataType : 'json',
				 success : function(json) {
				 if (json.flag) {
					 alert(json.data);
					 $("#mytab").bootstrapTable('refresh');
				 } 
				 else{
					 alert(json.data);
				 }
				 },
				 error : function() {  
				            alert("异常！");  
				     }  
		});
	}else{
		return ;
	}
}
//获取搜索的所有值
function params(params){
	 $("#a input[type='text']").each(function(){
		    params[$(this).attr("id")] = $(this).val();
	 });
	 params["selecttype"] = $("#selecttype").val();
	 return params;
}
</script>
</html>