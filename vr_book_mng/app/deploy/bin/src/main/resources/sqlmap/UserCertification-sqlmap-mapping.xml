<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table dxs_user_certification -->
    <resultMap id="RM-USER-CERTIFICATION" class="com.onway.dxsmng.common.dal.dataobject.UserCertificationDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="certificationImg" column="CERTIFICATION_IMG"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="certificationVoice" column="CERTIFICATION_VOICE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="voiceLength" column="VOICE_LENGTH"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="certificationStatus" column="CERTIFICATION_STATUS"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="certificationSignature" column="CERTIFICATION_SIGNATURE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="voiceCost.cent" column="VOICE_COST"  javaType="long" jdbcType="DECIMAL" />
		<result property="creater" column="CREATER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="modifier" column="MODIFIER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="memo" column="MEMO"  javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserCertificationDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserCertificationDAO.selectcertification -->
	<select id="MS-USER-CERTIFICATION-SELECTCERTIFICATION" resultClass="java.util.HashMap">
	        select duc.*,dua.LEARN_POINT_AMOUNT,dua.RECHARGE_LEARN_POINT,dua.EARN_LEARN_POINT,
				dua.LEARN_COIN_AMOUNT,dua.LEARN_COIN,du.* from 
				dxs_user_certification duc 
				left join dxs_user du on duc.USER_ID = du.USER_id 
				left join dxs_user_account dua on duc.USER_ID = dua.USER_ID 
				where 1=1 
				<isNotEmpty property="username">
	    			AND du.USER_NAME like '%$username$%' 
	    		</isNotEmpty>
	    		<isNotEmpty property="nickname">
	    			AND du.NICK_NAME like '%$nickname$%' 
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND du.cell like '%$cell$%' 
	    		</isNotEmpty>
	    		<isNotEmpty property="sex">
	    			AND du.sex = #sex#
	    		</isNotEmpty>
	    		<isNotEmpty property="starlevel">
	    			AND du.STAR_LEVEL = #starlevel#
	    		</isNotEmpty>
	    		<isNotEmpty property="status">
	    			AND du.STATUS = #status#
	    		</isNotEmpty>
	    		<isNotEmpty property="certificationstatus">
	    			AND duc.CERTIFICATION_STATUS = #certificationstatus#
	    		</isNotEmpty>
	    		<isNotEmpty property="recommendFlg">
	    			AND du.RECOMMEND_FLG = #recommendFlg#
	    		</isNotEmpty>
	    		order by  duc.GMT_MODIFIED desc 
	    		LIMIT $offset$, $limit$
    </select>

    <!-- mapped statement for IbatisUserCertificationDAO.selectcertificationcount -->
			 <select id="MS-USER-CERTIFICATION-SELECTCERTIFICATIONCOUNT" resultClass="int">
	        select count(1) from 
				dxs_user_certification duc 
				left join dxs_user du on duc.USER_ID = du.USER_id
				where 1=1 
				<isNotEmpty property="username">
	    			AND du.USER_NAME like '%$username$%' 
	    		</isNotEmpty>
	    		<isNotEmpty property="nickname">
	    			AND du.NICK_NAME like '%$nickname$%' 
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND du.cell like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="sex">
	    			AND du.sex = #sex#
	    		</isNotEmpty>
	    		<isNotEmpty property="starlevel">
	    			AND du.STAR_LEVEL = #starlevel#
	    		</isNotEmpty>
	    		<isNotEmpty property="status">
	    			AND du.STATUS = #status#
	    		</isNotEmpty>
	    		<isNotEmpty property="certificationstatus">
	    			AND duc.CERTIFICATION_STATUS = #certificationstatus#
	    		</isNotEmpty>
	    		<isNotEmpty property="recommendFlg">
	    			AND du.RECOMMEND_FLG = #recommendFlg#
	    		</isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserCertificationDAO.updatecertification -->
    <update id="MS-USER-CERTIFICATION-UPDATECERTIFICATION">
        update dxs_user_certification set modifier =#modifier#,GMT_MODIFIED = #gmtmodified#,
				CERTIFICATION_STATUS=#status#
				<isNotEmpty property="memo">
	    			AND memo = #memo#
	    		</isNotEmpty>
	    		where id = #id#
    </update>

    <!-- mapped statement for IbatisUserCertificationDAO.addcertification -->
    <insert id="MS-USER-CERTIFICATION-ADDCERTIFICATION">
    <![CDATA[
        insert into dxs_user_certification(user_id,CERTIFICATION_STATUS) values (#userId#, #certificationStatus#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserCertificationDAO.checkcertification -->
    <update id="MS-USER-CERTIFICATION-CHECKCERTIFICATION">
        update dxs_user_certification set CERTIFICATION_STATUS = #status#,MEMO = #memo#
				<isEqual property="status" compareValue="2">
				,CREATER = ' '
				</isEqual>
				<isEqual property="status" compareValue="1">
				,VOICE_COST = #cost#
				</isEqual>
				where id=#id#
    </update>

    <!-- mapped statement for IbatisUserCertificationDAO.removeCerflg -->
    <update id="MS-USER-CERTIFICATION-REMOVE-CERFLG">
    <![CDATA[
        update dxs_user_certification set modifier=#modifier#, GMT_MODIFIED=CURRENT_TIMESTAMP, CERTIFICATION_STATUS='0', CREATER='0' where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserCertificationDAO.queryAllDrenUserId -->
			 <select id="MS-USER-CERTIFICATION-QUERY-ALL-DREN-USER-ID" resultClass="java.lang.String">
	        SELECT
				USER_ID
			FROM dxs_user_certification 
			WHERE CERTIFICATION_STATUS = '1'
			<isNotEmpty property="startRow">
                limit $startRow$,$pageSize$
            </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserCertificationDAO.queryAllDrenUserIdCount -->
			 <select id="MS-USER-CERTIFICATION-QUERY-ALL-DREN-USER-ID-COUNT" resultClass="int">
	    <![CDATA[
        select COUNT(1) from dxs_user_certification where (CERTIFICATION_STATUS = '1')
    ]]>
    </select>

</sqlMap>