<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table dxs_feedback -->
    <resultMap id="RM-FEEDBACK" class="com.onway.dxsmng.common.dal.dataobject.FeedbackDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="feedbackId" column="FEEDBACK_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="title" column="TITLE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="img" column="IMG"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="type" column="TYPE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="message" column="MESSAGE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="replyContent" column="REPLY_CONTENT"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="replyName" column="REPLY_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisFeedbackDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisFeedbackDAO.selectallfeedback -->
	<select id="MS-FEEDBACK-SELECTALLFEEDBACK" resultClass="java.util.HashMap">
	        select df.*,du.NICK_NAME,du.CELL 
				from dxs_feedback df 
				left join dxs_user du on df.USER_ID = du.USER_ID 
				where 1=1 
				<isNotEmpty property="nickname">
	    			AND du.NICK_NAME like '%$"nickname"$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND du.CELL like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="title">
	    			AND df.TITLE like '%$title$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="starpdate">
	    			AND df.GMT_CREATE &gt;= #starpdate#
	    		</isNotEmpty>
	    		<isNotEmpty property="enddate">
	    			AND df.GMT_CREATE &lt;= #enddate#
	    		</isNotEmpty>
	    		order by df.GMT_CREATE desc 
	    		LIMIT $offset$, $limit$
    </select>

    <!-- mapped statement for IbatisFeedbackDAO.selectallfeedbackcount -->
			 <select id="MS-FEEDBACK-SELECTALLFEEDBACKCOUNT" resultClass="int">
	        select count(1) 
				from dxs_feedback df 
				left join dxs_user du on df.USER_ID = du.USER_ID 
				where 1=1 
				<isNotEmpty property="nickname">
	    			AND du.NICK_NAME like '%$"nickname"$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND du.CELL like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="title">
	    			AND df.TITLE like '%$title$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="starpdate">
	    			AND df.GMT_CREATE &gt;= #starpdate#
	    		</isNotEmpty>
	    		<isNotEmpty property="enddate">
	    			AND df.GMT_CREATE &lt;= #enddate#
	    		</isNotEmpty>
    </select>

    <!-- mapped statement for IbatisFeedbackDAO.updatefeedback -->
    <update id="MS-FEEDBACK-UPDATEFEEDBACK">
    <![CDATA[
        update dxs_feedback set REPLY_NAME=#replyName#, REPLY_CONTENT=#replyContent#, GMT_MODIFIED=#gmtModified# where (id = #id#)
    ]]>
    </update>

</sqlMap>