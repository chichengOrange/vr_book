<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table dxs_user -->
    <resultMap id="RM-USER" class="com.onway.dxsmng.common.dal.dataobject.UserDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userName" column="USER_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="nickName" column="NICK_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="cell" column="CELL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="sex" column="SEX"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="birthday" column="BIRTHDAY"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="headUrl" column="HEAD_URL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="starLevel" column="STAR_LEVEL"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="level" column="LEVEL"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="followCount" column="FOLLOW_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="fansCount" column="FANS_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="dynamicCount" column="DYNAMIC_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="zanCount" column="ZAN_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="visitorCount" column="VISITOR_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="shareCount" column="SHARE_COUNT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="signature" column="SIGNATURE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="school" column="SCHOOL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="educational" column="EDUCATIONAL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="majors" column="MAJORS"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="language" column="LANGUAGE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="specialty" column="SPECIALTY"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="password" column="PASSWORD"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="longitude" column="LONGITUDE"  javaType="double" jdbcType="DOUBLE"  nullValue="0"/>
		<result property="latitude" column="LATITUDE"  javaType="double" jdbcType="DOUBLE"  nullValue="0"/>
		<result property="recommendFlg" column="RECOMMEND_FLG"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="idCard" column="ID_CARD"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="aliAccount" column="ALI_ACCOUNT"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="wechatAccount" column="WECHAT_ACCOUNT"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="status" column="STATUS"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="inviteCode" column="INVITE_CODE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="city" column="CITY"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="line" column="LINE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="weight" column="WEIGHT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="creater" column="CREATER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="modifier" column="MODIFIER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="memo" column="MEMO"  javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserDAO.selectuser -->
	<select id="MS-USER-SELECTUSER" resultClass="java.util.HashMap">
	        select * from dxs_user where 1=1 
				<isNotEmpty property="username">
	    			AND USER_NAME like '%$username$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="nickname">
	    			AND nick_name like '%$nickname$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND cell like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="sex">
	    			AND sex =#sex#
	    		</isNotEmpty>
	    		<isNotEmpty property="starlevel">
	    			AND STAR_LEVEL =#starlevel#
	    		</isNotEmpty>
	    		<isNotEmpty property="status">
	    			AND STATUS =#status#
	    		</isNotEmpty>
	    		<isNotEmpty property="line">
	    			AND line =#line#
	    		</isNotEmpty>
	    		<isNotEmpty property="starpdate">
	    			AND GMT_CREATE &gt;= #starpdate#
	    		</isNotEmpty>
	    		<isNotEmpty property="enddate">
	    			AND GMT_CREATE &lt;= #enddate#
	    		</isNotEmpty>
	    		order by GMT_CREATE desc 
	    		LIMIT $offset$, $limit$
    </select>

    <!-- mapped statement for IbatisUserDAO.selectusercount -->
			 <select id="MS-USER-SELECTUSERCOUNT" resultClass="int">
	        select count(1) from dxs_user where 1=1 
				<isNotEmpty property="username">
	    			AND USER_NAME like '%$username$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="nickname">
	    			AND nick_name like '%$nickname$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND cell like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="sex">
	    			AND sex =#sex#
	    		</isNotEmpty>
	    		<isNotEmpty property="starlevel">
	    			AND STAR_LEVEL =#starlevel#
	    		</isNotEmpty>
	    		<isNotEmpty property="status">
	    			AND STATUS =#status#
	    		</isNotEmpty>
	    		<isNotEmpty property="line">
	    			AND line =#line#
	    		</isNotEmpty>
	    		<isNotEmpty property="starpdate">
	    			AND GMT_CREATE &gt;= #starpdate#
	    		</isNotEmpty>
	    		<isNotEmpty property="enddate">
	    			AND GMT_CREATE &lt;= #enddate#
	    		</isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.updateuser -->
    <update id="MS-USER-UPDATEUSER">
        update dxs_user set $field$ = #value# where user_id = #userid#
    </update>

    <!-- mapped statement for IbatisUserDAO.adduser -->
    <insert id="MS-USER-ADDUSER">
    <![CDATA[
        insert into dxs_user(USER_ID,USER_NAME,NICK_NAME,CELL,SEX,BIRTHDAY,SIGNATURE,SCHOOL,EDUCATIONAL,MAJORS,SPECIALTY,PASSWORD,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (#userId#, #userName#, #nickName#, #cell#, #sex#, #birthday#, #signature#, #school#, #educational#, #majors#, #specialty#, #password#, #creater#, #gmtCreate#, #modifier#, #gmtModified#, #memo#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserDAO.selectuserbyuserid -->
			 <select id="MS-USER-SELECTUSERBYUSERID" resultClass="java.util.HashMap">
	    <![CDATA[
        select USER_ID, USER_NAME, NICK_NAME, ALI_ACCOUNT, WECHAT_ACCOUNT from dxs_user where (USER_ID = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserDAO.exportuser -->
	<select id="MS-USER-EXPORTUSER" resultClass="java.util.HashMap">
	        SELECT @rownum:=@rownum+1 AS ROWNUM, d.*
				FROM (SELECT @rownum:=0) r,dxs_user d where 1=1 
				<isNotEmpty property="username">
	    			AND d.USER_NAME like '%$username$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="nickname">
	    			AND d.nick_name like '%$nickname$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="cell">
	    			AND d.cell like '%$cell$%'
	    		</isNotEmpty>
	    		<isNotEmpty property="sex">
	    			AND d.sex =#sex#
	    		</isNotEmpty>
	    		<isNotEmpty property="starlevel">
	    			AND d.STAR_LEVEL =#starlevel#
	    		</isNotEmpty>
	    		<isNotEmpty property="status">
	    			AND d.STATUS =#status#
	    		</isNotEmpty>
	    		<isNotEmpty property="line">
	    			AND d.line =#line#
	    		</isNotEmpty>
	    		<isNotEmpty property="starpdate">
	    			AND d.GMT_CREATE &gt;= #starpdate#
	    		</isNotEmpty>
	    		<isNotEmpty property="enddate">
	    			AND d.GMT_CREATE &lt;= #enddate#
	    		</isNotEmpty>
	    		order by d.GMT_CREATE desc
    </select>

    <!-- mapped statement for IbatisUserDAO.importuser -->
    <insert id="MS-USER-IMPORTUSER">
    <![CDATA[
        insert into dxs_user(USER_ID,USER_NAME,NICK_NAME,CELL,SEX,BIRTHDAY,STAR_LEVEL,SCHOOL,EDUCATIONAL,MAJORS,SPECIALTY,PASSWORD,ID_CARD,ALI_ACCOUNT,WECHAT_ACCOUNT,CITY,CREATER,GMT_CREATE,HEAD_URL) values (#userId#, #userName#, #nickName#, #cell#, #sex#, #birthday#, #starLevel#, #school#, #educational#, #majors#, #specialty#, #password#, #idCard#, #aliAccount#, #wechatAccount#, #city#, #creater#, #gmtCreate#, #headUrl#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserDAO.selectcountbycell -->
			 <select id="MS-USER-SELECTCOUNTBYCELL" resultClass="int">
	    <![CDATA[
        select count(1) from dxs_user where (cell = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserDAO.selectallcounttotoday -->
			 <select id="MS-USER-SELECTALLCOUNTTOTODAY" resultClass="java.util.HashMap">
	        select 
				(select count(1) from dxs_user where date_format(GMT_CREATE,'%Y-%m-%d')= date_format(SYSDATE(),'%Y-%m-%d'))  usercount,
				(select sum(AMOUNT) from dxs_recharge_order where date_format(PAY_TIME,'%Y-%m-%d')  =  date_format(SYSDATE(),'%Y-%m-%d'))  recharordercount,
				(select count(1) from dxs_dynamic_state where date_format(GMT_CREATE,'%Y-%m-%d')  =  date_format(SYSDATE(),'%Y-%m-%d'))  dynamiccount
				 from  dual
    </select>

    <!-- mapped statement for IbatisUserDAO.selectallweekcount -->
			 <select id="MS-USER-SELECTALLWEEKCOUNT" resultClass="java.util.HashMap">
	        select 
				(select count(1) from dxs_user    where DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(#date#,'%Y-%m-%d')) Monday, 
				(select count(1) from dxs_user    where  DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 1 day),'%Y-%m-%d')) Tuesday,
				(select count(1) from dxs_user    where  DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 2 day),'%Y-%m-%d')) Wednesday
				,
				(select count(1) from dxs_user    where DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 3 day),'%Y-%m-%d')) Thursday
				,
				(select count(1) from dxs_user    where DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 4 day),'%Y-%m-%d')) Friday
				,
				(select count(1) from dxs_user    where DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 5 day),'%Y-%m-%d')) Saturday
				,
				(select count(1) from dxs_user    where DATE_FORMAT(GMT_CREATE,'%Y-%m-%d')=DATE_FORMAT(date_add(#date#,interval 5 day),'%Y-%m-%d')) Sunday
				 from dual
    </select>

    <!-- mapped statement for IbatisUserDAO.selectallsex -->
			 <select id="MS-USER-SELECTALLSEX" resultClass="java.util.HashMap">
	        select (select count(1) from dxs_user where sex =0 ) boy , (select count(1) from dxs_user where sex =1) girl from dual
    </select>

    <!-- mapped statement for IbatisUserDAO.selectallcity -->
	<select id="MS-USER-SELECTALLCITY" resultClass="java.util.HashMap">
	        select d.city from ( select left(city,instr(city,' ')) city from dxs_user) d GROUP BY d.city
    </select>

    <!-- mapped statement for IbatisUserDAO.selectallsexcount -->
			 <select id="MS-USER-SELECTALLSEXCOUNT" resultClass="int">
	        select count(1) from dxs_user where city like '%$city$%' and sex = #sex#
    </select>

    <!-- mapped statement for IbatisUserDAO.checkNickName -->
			 <select id="MS-USER-CHECK-NICK-NAME" resultMap="RM-USER">
	        SELECT
				ID,
				USER_ID,
				USER_NAME,
				NICK_NAME,
				ID_CARD,
				CELL,
				SEX,
				BIRTHDAY,
				HEAD_URL,
				STAR_LEVEL,
				LEVEL,
				FOLLOW_COUNT,
				FANS_COUNT,
				DYNAMIC_COUNT,
				ZAN_COUNT,
				VISITOR_COUNT,
				SHARE_COUNT,
				SIGNATURE,
				SCHOOL,
				MAJORS,
				EDUCATIONAL,
				LANGUAGE,
				SPECIALTY,
				PASSWORD,
				LONGITUDE,
				LATITUDE,
				RECOMMEND_FLG,
				ALI_ACCOUNT,
				WECHAT_ACCOUNT,
				STATUS,
				INVITE_CODE,
				CITY,
				LINE,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO,
				WEIGHT
			FROM dxs_user
			WHERE 1=1
			<isNotEmpty property="nickName" prepend="and">
	                 NICK_NAME = #nickName#
	        </isNotEmpty>
            <isNotEmpty property="userId" prepend="and">
	                 USER_ID &lt;&gt; #userId#
	        </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.checkUserCell -->
			 <select id="MS-USER-CHECK-USER-CELL" resultMap="RM-USER">
	        SELECT
				ID,
				USER_ID,
				USER_NAME,
				NICK_NAME,
				ID_CARD,
				CELL,
				SEX,
				BIRTHDAY,
				HEAD_URL,
				STAR_LEVEL,
				LEVEL,
				FOLLOW_COUNT,
				FANS_COUNT,
				DYNAMIC_COUNT,
				ZAN_COUNT,
				VISITOR_COUNT,
				SHARE_COUNT,
				SIGNATURE,
				SCHOOL,
				MAJORS,
				EDUCATIONAL,
				LANGUAGE,
				SPECIALTY,
				PASSWORD,
				LONGITUDE,
				LATITUDE,
				RECOMMEND_FLG,
				ALI_ACCOUNT,
				WECHAT_ACCOUNT,
				STATUS,
				INVITE_CODE,
				CITY,
				LINE,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO,
				WEIGHT
			FROM dxs_user
			WHERE 1=1
			<isNotEmpty property="cell" prepend="and">
	                 CELL = #cell#
	        </isNotEmpty>
            <isNotEmpty property="userId" prepend="and">
	                 USER_ID &lt;&gt; #userId#
	        </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.changeUserInfo -->
    <update id="MS-USER-CHANGE-USER-INFO">
    <![CDATA[
        update dxs_user set USER_NAME=#userName#, NICK_NAME=#nickName#, CELL=#cell#, SEX=#sex#, STAR_LEVEL=#starLevel#, FOLLOW_COUNT=#followCount#, FANS_COUNT=#fansCount#, DYNAMIC_COUNT=#dynamicCount#, ZAN_COUNT=#zanCount#, VISITOR_COUNT=#visitorCount#, SCHOOL=#school#, EDUCATIONAL=#educational#, MAJORS=#majors#, SPECIALTY=#specialty#, RECOMMEND_FLG=#recommendFlg#, ALI_ACCOUNT=#aliAccount#, WECHAT_ACCOUNT=#wechatAccount#, CITY=#city#, LINE=#line#, SIGNATURE=#signature#, MEMO=#memo#, BIRTHDAY=#birthday#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.queryUserInfo -->
			 <select id="MS-USER-QUERY-USER-INFO" resultMap="RM-USER">
	        SELECT
				ID,
				USER_ID,
				USER_NAME,
				NICK_NAME,
				ID_CARD,
				CELL,
				SEX,
				BIRTHDAY,
				HEAD_URL,
				STAR_LEVEL,
				LEVEL,
				FOLLOW_COUNT,
				FANS_COUNT,
				DYNAMIC_COUNT,
				ZAN_COUNT,
				VISITOR_COUNT,
				SHARE_COUNT,
				SIGNATURE,
				SCHOOL,
				MAJORS,
				EDUCATIONAL,
				SPECIALTY,
				PASSWORD,
				LONGITUDE,
				LATITUDE,
				RECOMMEND_FLG,
				LANGUAGE,
				ALI_ACCOUNT,
				WECHAT_ACCOUNT,
				STATUS,
				INVITE_CODE,
				CITY,
				LINE,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO,
				WEIGHT
			FROM dxs_user
			WHERE 1=1
            <isNotEmpty property="userId" prepend="and">
	                 USER_ID = #userId#
	        </isNotEmpty>
	        <isNotEmpty property="cell" prepend="and">
	                 CELL = #cell#
	        </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.queryAllUserId -->
			 <select id="MS-USER-QUERY-ALL-USER-ID" resultClass="java.lang.String">
	        SELECT
				USER_ID
			FROM dxs_user
			<isNotEmpty property="startRow">
                limit $startRow$,$pageSize$
            </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.queryAllUserIdCount -->
			 <select id="MS-USER-QUERY-ALL-USER-ID-COUNT" resultClass="int">
	    <![CDATA[
        select COUNT(1) from dxs_user
    ]]>
    </select>

    <!-- mapped statement for IbatisUserDAO.defaultPwd -->
    <update id="MS-USER-DEFAULT-PWD">
    <![CDATA[
        update dxs_user set PASSWORD=#password#, MODIFIER=#modifier#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.importuserCer -->
    <insert id="MS-USER-IMPORTUSER-CER">
    <![CDATA[
        insert into dxs_user(USER_ID,USER_NAME,NICK_NAME,CELL,SEX,BIRTHDAY,STAR_LEVEL,SCHOOL,EDUCATIONAL,MAJORS,SPECIALTY,PASSWORD,ID_CARD,ALI_ACCOUNT,WECHAT_ACCOUNT,CITY,CREATER,GMT_CREATE,HEAD_URL,SIGNATURE) values (#userId#, #userName#, #nickName#, #cell#, #sex#, #birthday#, #starLevel#, #school#, #educational#, #majors#, #specialty#, #password#, #idCard#, #aliAccount#, #wechatAccount#, #city#, #creater#, #gmtCreate#, #headUrl#, #signature#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserDAO.changeWeight -->
    <update id="MS-USER-CHANGE-WEIGHT">
    <![CDATA[
        update dxs_user set WEIGHT=#weight#, MODIFIER=#modifier#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.queryByUserId -->
			 <select id="MS-USER-QUERY-BY-USER-ID" resultMap="RM-USER">
	    <![CDATA[
        select * from dxs_user where (USER_ID = #value#)
    ]]>
    </select>

</sqlMap>