/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.VrSysConfigDAO;

import com.onway.fyapp.common.dal.dataobject.VrSysConfigDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Date;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.VrSysConfigDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/vr_sys_config.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisVrSysConfigDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisVrSysConfigDAO extends SqlMapClientDaoSupport implements VrSysConfigDAO {
	/**
	 *  Query DB table <tt>vr_sys_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, sys_key, sys_value, status, memo, gmt_create, gmt_modified from vr_sys_config</tt>
	 *
	 *	@return List<VrSysConfigDO>
	 *	@throws DataAccessException
	 */	 
    public  List<VrSysConfigDO>   loadAll() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-VR-SYS-CONFIG-LOAD-ALL", null);

    }

	/**
	 *  Query DB table <tt>vr_sys_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from vr_sys_config</tt>
	 *
	 *	@param memo
	 *	@param offset
	 *	@param limit
	 *	@return List<VrSysConfigDO>
	 *	@throws DataAccessException
	 */	 
    public  List<VrSysConfigDO>   selectallsysconfig(String memo, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("memo", memo);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-VR-SYS-CONFIG-SELECTALLSYSCONFIG", param);

    }

	/**
	 *  Query DB table <tt>vr_sys_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from vr_sys_config</tt>
	 *
	 *	@param memo
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public  List<Long>   selectallsysconfigcount(String memo) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("memo", memo);

        return getSqlMapClientTemplate().queryForList("MS-VR-SYS-CONFIG-SELECTALLSYSCONFIGCOUNT", param);

    }

	/**
	 *  Update DB table <tt>vr_sys_config</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update vr_sys_config set id=id</tt>
	 *
	 *	@param gmtmodified
	 *	@param key
	 *	@param value
	 *	@param status
	 *	@param memo
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updatesysconfig(Date gmtmodified, String key, String value, String status, String memo, String id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("gmtmodified", gmtmodified);
        param.put("key", key);
        param.put("value", value);
        param.put("status", status);
        param.put("memo", memo);
        param.put("id", id);

        return getSqlMapClientTemplate().update("MS-VR-SYS-CONFIG-UPDATESYSCONFIG", param);
    }

	/**
	 *  Insert one <tt>VrSysConfigDO</tt> object to DB table <tt>vr_sys_config</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into vr_sys_config(SYS_KEY,SYS_VALUE,STATUS,MEMO,GMT_CREATE) values (?, ?, ?, ?, ?)</tt>
	 *
	 *	@param vrSysConfig
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insertsysconfig(VrSysConfigDO vrSysConfig) throws DataAccessException {
    	if (vrSysConfig == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-VR-SYS-CONFIG-INSERTSYSCONFIG", vrSysConfig);

        return vrSysConfig.getId();
    }

	/**
	 *  Query DB table <tt>vr_sys_config</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, SYS_KEY, SYS_VALUE, STATUS, MEMO, GMT_CREATE, GMT_MODIFIED from vr_sys_config where (SYS_KEY = ?)</tt>
	 *
	 *	@param sysKey
	 *	@return VrSysConfigDO
	 *	@throws DataAccessException
	 */	 
    public  VrSysConfigDO   selectSysConfigBySysKey(String sysKey) throws DataAccessException {

 
	        return (VrSysConfigDO) getSqlMapClientTemplate().queryForObject("MS-VR-SYS-CONFIG-SELECT-SYS-CONFIG-BY-SYS-KEY", sysKey);
		
    }

}