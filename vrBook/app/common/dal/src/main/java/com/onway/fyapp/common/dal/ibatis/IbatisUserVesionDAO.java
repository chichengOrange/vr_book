/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.UserVesionDAO;

import com.onway.fyapp.common.dal.dataobject.UserVesionDO;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.UserVesionDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/vr_user_vesion.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisUserVesionDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisUserVesionDAO extends SqlMapClientDaoSupport implements UserVesionDAO {
	/**
	 *  Insert one <tt>UserVesionDO</tt> object to DB table <tt>vr_user_vesion</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into vr_user_vesion(ID,USER_ID,APP_VERSION,IMEI,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param userVesion
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(UserVesionDO userVesion) throws DataAccessException {
    	if (userVesion == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-USER-VESION-INSERT", userVesion);

        return userVesion.getId();
    }

	/**
	 *  Query DB table <tt>vr_user_vesion</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, USER_ID, APP_VERSION, IMEI, GMT_CREATE, GMT_MODIFIED from vr_user_vesion where (USER_ID = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserVesionDO
	 *	@throws DataAccessException
	 */	 
    public UserVesionDO queryByUserId(String userId) throws DataAccessException {

 
        return (UserVesionDO) getSqlMapClientTemplate().queryForObject("MS-USER-VESION-QUERY-BY-USER-ID", userId);

    }

	/**
	 *  Update DB table <tt>vr_user_vesion</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update vr_user_vesion set APP_VERSION=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param appVersion
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateVersion(String appVersion, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("appVersion", appVersion);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-VESION-UPDATE-VERSION", param);
    }

}