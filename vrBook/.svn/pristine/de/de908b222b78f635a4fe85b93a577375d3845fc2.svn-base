package com.onway.web.controller.product;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONArray;
import com.onway.common.lang.StringUtils;
import com.onway.fyapp.common.dal.daointerface.EvaluateDAO;
import com.onway.fyapp.common.dal.dataobject.returnObj.EvaluateInfo;
import com.onway.model.enums.DelFlgEnum;
import com.onway.platform.common.exception.BaseRuntimeException;
import com.onway.web.controller.AbstractController;
import com.onway.web.controller.result.JsonPageResult;
import com.onway.web.controller.result.JsonResult;

/**
 * 
 * @author lishuaikai
 * @Description 评价控制类	
 * @data 2018年6月28日 上午10:47:14
 */

@Controller
public class EvaluateController extends AbstractController{

	@Resource
	private EvaluateDAO evaluateDAO;
	
	
	/**
	 * 查询商品评价
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "queryEvaluate.do")
	@ResponseBody
	public Object queryEvaluateByProduct(HttpServletRequest request){
		JsonPageResult<EvaluateInfo> result = new JsonPageResult<EvaluateInfo>(true);
		String productId = request.getParameter("productId");
		try {
			int pageNum = adjustPageNo(request);
			int pageSize = adjustPageSize(request);
			int offset = (pageNum - 1) * pageSize;
			
			int count = evaluateDAO.queryEvaluateCountByProductId(productId, DelFlgEnum.NOT_DEL.getCode());
			List<Map<String, Object>> evaluateList = evaluateDAO.queryEvaluateByProductId(productId, DelFlgEnum.NOT_DEL.getCode(),
					offset, pageSize);
			List<EvaluateInfo> evaluateInfos = new ArrayList<EvaluateInfo>();
			for (Map<String, Object> map : evaluateList) {
				EvaluateInfo info = new EvaluateInfo();
				info.setEvaluateId(getMapValue(map, "evaluateId"));
				info.setType(getMapValue(map, "type"));
				info.setProductId(getMapValue(map, "productId"));
				info.setTeamId(getMapValue(map, "teamId"));
				info.setKnowId(getMapValue(map, "knowId"));
				info.setStar(getMapValue(map, "star"));
				info.setContent(getMapValue(map, "content"));
				info.setDelFlg(getMapValue(map, "delFlg"));
				info.setUserId(getMapValue(map, "userId"));
				info.setHeadUrl(getMapValue(map, "headUrl"));
				info.setNickName(getMapValue(map, "nickName"));
				info.setCreateTime(getMapValue(map, "createTime"));
				//图片
				String imgList = getMapValue(map, "imgList");
				if(StringUtils.isNotBlank(imgList)){
					List<String> list = new ArrayList<String>();
                    JSONArray parseArray = JSONArray.parseArray(imgList);
                    for (Object object : parseArray) {
						list.add(object + "");
					}
                    info.setImgList(list);
				}
				evaluateInfos.add(info);
				result.setListObject(evaluateInfos);
				result.setNext(count > pageNum * pageSize);
				result.setTotalPages(count % pageSize ==0 ? count / pageSize : (count / pageSize) + 1);
			}
		} catch (BaseRuntimeException e) {
			// TODO: handle exception
			return new JsonResult(false, "", MessageFormat.format("查询评价异常：{0}", new Object[]{e.getMessage()}));
		}
		
		return result;
		
	}
	
	public String getMapValue(Map<String, Object> map, String key){
		String resultStr = map.get(key) == null ? "" :  map.get(key)+"";
		return resultStr;
	}
}
