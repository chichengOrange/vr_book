/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.CartDAO;

import com.onway.fyapp.common.dal.dataobject.CartDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.CartDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_cart.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisCartDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisCartDAO extends SqlMapClientDaoSupport implements CartDAO {
	/**
	 *  Insert one <tt>CartDO</tt> object to DB table <tt>hqyt_cart</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_cart(CART_ID,USER_ID,TEAM_ID,PRODUCT_ID,PRODUCT_NUM,ATTR_IDS,ATTR_NAMES,VALUE_IDS,VALUEES,STATUS,MEMO,STOCK_ID,DELIVERY,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param cart
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(CartDO cart) throws DataAccessException {
    	if (cart == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-CART-INSERT", cart);

        return cart.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_cart</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_cart</tt>
	 *
	 *	@param userId
	 *	@param productId
	 *	@param stockId
	 *	@param status
	 *	@return CartDO
	 *	@throws DataAccessException
	 */	 
    public CartDO queryCartByItem(String userId, String productId, int stockId, String status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("productId", productId);
        param.put("stockId", new Integer(stockId));
        param.put("status", status);

        return (CartDO) getSqlMapClientTemplate().queryForObject("MS-CART-QUERY-CART-BY-ITEM", param);

    }

	/**
	 *  Update DB table <tt>hqyt_cart</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_cart set PRODUCT_NUM=? where (CART_ID = ?)</tt>
	 *
	 *	@param productNum
	 *	@param cartId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateProductNumByCartId(int productNum, String cartId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("productNum", new Integer(productNum));
        param.put("cartId", cartId);

        return getSqlMapClientTemplate().update("MS-CART-UPDATE-PRODUCT-NUM-BY-CART-ID", param);
    }

	/**
	 *  Update DB table <tt>hqyt_cart</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_cart set STATUS=? where (CART_ID = ?)</tt>
	 *
	 *	@param status
	 *	@param cartId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCartStatusByCartId(String status, String cartId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("status", status);
        param.put("cartId", cartId);

        return getSqlMapClientTemplate().update("MS-CART-UPDATE-CART-STATUS-BY-CART-ID", param);
    }

	/**
	 *  Update DB table <tt>hqyt_cart</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_cart set DELIVERY=? where (CART_ID = ?)</tt>
	 *
	 *	@param delivery
	 *	@param cartId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCartDeliveryByCartId(String delivery, String cartId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delivery", delivery);
        param.put("cartId", cartId);

        return getSqlMapClientTemplate().update("MS-CART-UPDATE-CART-DELIVERY-BY-CART-ID", param);
    }

	/**
	 *  Query DB table <tt>hqyt_cart</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_cart</tt>
	 *
	 *	@param userId
	 *	@param status
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public List<Map<String,Object>> queryCart(String userId, String status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("status", status);

        return getSqlMapClientTemplate().queryForList("MS-CART-QUERY-CART", param);

    }

}