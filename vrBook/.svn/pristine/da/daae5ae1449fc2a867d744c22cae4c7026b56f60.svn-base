/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.StockPriceDAO;

import com.onway.fyapp.common.dal.dataobject.StockPriceDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.StockPriceDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_stock_price.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisStockPriceDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisStockPriceDAO extends SqlMapClientDaoSupport implements StockPriceDAO {
	/**
	 *  Insert one <tt>StockPriceDO</tt> object to DB table <tt>hqyt_stock_price</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_stock_price(ATTR_IDS,ATTR_NAMES,VALUE_IDS,VALUEES,IMG_SRC,PRICE,STOCK,SELL_NUM,MEMO,GMT_CREATE,CREATER,GMT_MODIFIED,MODIFIER,GOODS_NO) values (?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?, ?)</tt>
	 *
	 *	@param stockPrice
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(StockPriceDO stockPrice) throws DataAccessException {
    	if (stockPrice == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-STOCK-PRICE-INSERT", stockPrice);

        return stockPrice.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_stock_price</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, ATTR_IDS, ATTR_NAMES, VALUE_IDS, VALUEES, IMG_SRC, PRICE, STOCK, SELL_NUM, MEMO, GMT_CREATE, CREATER, GMT_MODIFIED, MODIFIER, GOODS_NO from hqyt_stock_price where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return StockPriceDO
	 *	@throws DataAccessException
	 */	 
    public StockPriceDO selectById(int id) throws DataAccessException {

        Integer param = new Integer(id);

        return (StockPriceDO) getSqlMapClientTemplate().queryForObject("MS-STOCK-PRICE-SELECT-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_stock_price</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, ATTR_IDS, ATTR_NAMES, VALUE_IDS, VALUEES, IMG_SRC, PRICE, STOCK, SELL_NUM, MEMO, GMT_CREATE, CREATER, GMT_MODIFIED, MODIFIER, GOODS_NO from hqyt_stock_price where (ID = ?) for update</tt>
	 *
	 *	@param id
	 *	@return StockPriceDO
	 *	@throws DataAccessException
	 */	 
    public StockPriceDO selectByIdLock(int id) throws DataAccessException {

        Integer param = new Integer(id);

        return (StockPriceDO) getSqlMapClientTemplate().queryForObject("MS-STOCK-PRICE-SELECT-BY-ID-LOCK", param);

    }

	/**
	 *  Query DB table <tt>hqyt_stock_price</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, ATTR_IDS, ATTR_NAMES, VALUE_IDS, VALUEES, IMG_SRC, PRICE, STOCK, SELL_NUM, MEMO, GMT_CREATE, CREATER, GMT_MODIFIED, MODIFIER, GOODS_NO from hqyt_stock_price where (VALUE_IDS = ?)</tt>
	 *
	 *	@param valueIds
	 *	@return StockPriceDO
	 *	@throws DataAccessException
	 */	 
    public StockPriceDO selectByValueIds(String valueIds) throws DataAccessException {

 
        return (StockPriceDO) getSqlMapClientTemplate().queryForObject("MS-STOCK-PRICE-SELECT-BY-VALUE-IDS", valueIds);

    }

	/**
	 *  Query DB table <tt>hqyt_stock_price</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, ATTR_IDS, ATTR_NAMES, VALUE_IDS, VALUEES, IMG_SRC, PRICE, STOCK, GOOD_AMOUNT, SELL_NUM, MEMO, GMT_CREATE, CREATER, GMT_MODIFIED, MODIFIER, GOODS_NO from hqyt_stock_price where (GOODS_NO = ?)</tt>
	 *
	 *	@param goodsNo
	 *	@return List<StockPriceDO>
	 *	@throws DataAccessException
	 */	 
    public List<StockPriceDO> selectByGoodsNo(String goodsNo) throws DataAccessException {

 
        return getSqlMapClientTemplate().queryForList("MS-STOCK-PRICE-SELECT-BY-GOODS-NO", goodsNo);

    }

	/**
	 *  Query DB table <tt>hqyt_stock_price</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, ATTR_IDS, ATTR_NAMES, VALUE_IDS, VALUEES, IMG_SRC, PRICE, STOCK, SELL_NUM, MEMO, GMT_CREATE, CREATER, GMT_MODIFIED, MODIFIER, GOODS_NO from hqyt_stock_price where ((GOODS_NO = ?) AND (ATTR_IDS = ?) AND (VALUE_IDS = ?))</tt>
	 *
	 *	@param goodsNo
	 *	@param attrIds
	 *	@param valueIds
	 *	@return List<StockPriceDO>
	 *	@throws DataAccessException
	 */	 
    public List<StockPriceDO> selectStockInfo(String goodsNo, String attrIds, String valueIds) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("goodsNo", goodsNo);
        param.put("attrIds", attrIds);
        param.put("valueIds", valueIds);

        return getSqlMapClientTemplate().queryForList("MS-STOCK-PRICE-SELECT-STOCK-INFO", param);

    }

	/**
	 *  Update DB table <tt>hqyt_stock_price</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_stock_price set SELL_NUM=1</tt>
	 *
	 *	@param sellNum
	 *	@param stock
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateSellStockNum(int sellNum, int stock, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("sellNum", new Integer(sellNum));
        param.put("stock", new Integer(stock));
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-STOCK-PRICE-UPDATE-SELL-STOCK-NUM", param);
    }

}