/**
 * 
 */
package com.onway.core.service.impl;

import java.util.ArrayList;
import java.util.List;

import com.onway.core.service.ActivityQueryService;
import com.onway.fyapp.common.dal.daointerface.ActivityDAO;
import com.onway.fyapp.common.dal.dataobject.ActivityDO;
import com.onway.model.conver.ActivityConver;
import com.onway.platform.common.base.QueryResult;
import com.onway.platform.common.service.template.AbstractServiceImpl;
import com.onway.platform.common.service.template.ServiceCheckCallback;
import com.onway.platform.common.service.util.AssertUtil;
import com.onway.web.controller.result.ActivityResult;

public class ActivityQueryServiceImpl extends AbstractServiceImpl implements
	ActivityQueryService {

	private ActivityDAO activityDAO;

	public void setActivityDAO(ActivityDAO activityDAO) {
		this.activityDAO = activityDAO;
	}

	@Override
	public QueryResult<List<ActivityResult>> queryActivity( final String type, final String state, final int startRow, final int pageSize) {
		final QueryResult<List<ActivityResult>> result = new QueryResult<List<ActivityResult>>(
				false);
		serviceTemplate.executeWithoutTransaction(result,
				new ServiceCheckCallback() {

					@Override
					public void check() {
						AssertUtil.notBlank(type, "活动类型为空");
						AssertUtil.notBlank(state, "活动状态为空");
					}

					@Override
					public void executeService() {
						List<ActivityDO> queryActivity = activityDAO.queryActivity(type, state, startRow, pageSize);
						
						List<ActivityResult> reduceResults = new ArrayList<ActivityResult>();
						for (ActivityDO activityDO : queryActivity) {
							ActivityResult activityResult = ActivityConver.buildActivityListResult(activityDO);
							if (null != activityResult)
								reduceResults.add(activityResult);
						}
						result.setSuccess(true);
						result.setResultObject(reduceResults);
					}
				});
		return result;
	}

	public int queryActivityCount( final String type, final String state) {

		return activityDAO.queryActivityCount(type, state);
	}
	
}
