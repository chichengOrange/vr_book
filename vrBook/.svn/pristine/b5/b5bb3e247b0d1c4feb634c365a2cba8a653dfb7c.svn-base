package com.onway.web.controller.product;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.onway.fyapp.common.dal.daointerface.CartDAO;
import com.onway.fyapp.common.dal.dataobject.CartDO;
import com.onway.fyapp.common.dal.dataobject.returnObj.CartInfo;
import com.onway.fyapp.common.dal.dataobject.returnObj.GoodsAttrValueDOExt;
import com.onway.fyapp.common.dal.dataobject.returnObj.GoodsAttrValueSingleInfo;
import com.onway.model.enums.CartStatusEnum;
import com.onway.platform.common.base.BaseResult;
import com.onway.platform.common.exception.BaseRuntimeException;
import com.onway.web.controller.AbstractController;
import com.onway.web.controller.result.JsonQueryResult;
import com.onway.web.controller.result.JsonResult;

/**
 * 
 * @author lishuaikai
 * @Description 购物车控制类
 * @data 2018年7月3日 下午4:58:44
 */
@Controller
public class CartController extends AbstractController{

	@Resource
	private CartDAO cartDAO;
	
	
	/**
	 * 加入购物车
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "addCart.do")
	@ResponseBody
	public Object addCart(HttpServletRequest request){
		JsonResult result = new JsonResult(true);
		String productId = request.getParameter("productId");
		String userId = request.getParameter("userId");
		String productNum = request.getParameter("productNum");
		String stockId = request.getParameter("stockId");
		try {
			BaseResult baseResult =  cartService.addCart(productId, userId, productNum, stockId);
			result.setBizSucc(baseResult.isSuccess());
			result.setErrCode(baseResult.getCode());
			result.setErrMsg(baseResult.getMessage());
		} catch (BaseRuntimeException e) {
			// TODO: handle exception
			return new JsonResult(false, "", MessageFormat.format("加入购物车失败{0}", e.getMessage()));
		}
		
		return result;
	}
	
	/**
	 * 删除购物车中的商品
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "delCart.do")
	@ResponseBody
	public Object delCart(HttpServletRequest request){
		JsonResult result = new JsonResult(true);
		String cartId = request.getParameter("cardId");
		try {
			BaseResult baseResult = cartService.delCart(cartId);
			result.setBizSucc(baseResult.isSuccess());
		} catch (BaseRuntimeException e) {
			// TODO: handle exception
			return new JsonResult(false, "", MessageFormat.format("删除购物车商品失败{0}", e.getMessage()));
		}
		return result;
	}
	
	/**
	 * 修改购物车中的商品的配送方式
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "updateCartDelivery.do")
	@ResponseBody
	public Object updateCartDelivery(HttpServletRequest request){
		JsonResult result = new JsonResult(true);
		String cartId = request.getParameter("cardId");
		String delivery = request.getParameter("delivery");
		try {
			BaseResult baseResult = cartService.updateCartDelivery(cartId, delivery);
			result.setBizSucc(baseResult.isSuccess());
		} catch (BaseRuntimeException e) {
			// TODO: handle exception
			return new JsonResult(false, "", MessageFormat.format("修改配送方式失败{0}", e.getMessage()));
		}
		return result;
	}
	
	
	/**
	 * 查看购物车
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "myCart.do")
	@ResponseBody
	public Object queryCart(HttpServletRequest request){
		JsonQueryResult<List<CartInfo>> result = new JsonQueryResult<List<CartInfo>>(true);
		String userId = request.getParameter("userId");
		try {
			 List<Map<String, Object>> carts = cartDAO.queryCart(userId, CartStatusEnum.DELETED.getCode());
			 List<CartInfo> cartList = new ArrayList<CartInfo>();
			 for (Map<String, Object> map : carts) {
				CartInfo info = new CartInfo();
				info.setCartId(getMapValue(map, "cartId"));
				info.setUserId(getMapValue(map, "userId"));
				info.setTeamId(getMapValue(map, "teamId"));
				info.setProductId(getMapValue(map, "productId"));
				info.setProductNum(getMapValue(map, "productNum"));
				info.setDelivery(getMapValue(map, "delivery"));
				info.setTeamName(getMapValue(map, "teamName"));
				info.setProductName(getMapValue(map, "productName"));
				info.setPrice(getMapValue(map, "price"));
				String []attrNames = getMapValue(map, "attrNames").split(",");
				String []valuees = getMapValue(map, "valuees").split(",");
				List<GoodsAttrValueSingleInfo> attrList = new ArrayList<GoodsAttrValueSingleInfo>();
				for (int i = 0; i < attrNames.length; i++) {
					GoodsAttrValueSingleInfo attrValue = new GoodsAttrValueSingleInfo();
					attrValue.setAttrName(attrNames[i]);
					attrValue.setValues(valuees[i]);
					attrList.add(attrValue);
				}
				info.setAttrValue(attrList);
				cartList.add(info);
				
			}
			 result.setObj(cartList);
			
		} catch (BaseRuntimeException e) {
			// TODO: handle exception
			return new JsonResult(false, "", MessageFormat.format("查询购物车失败{0}", e.getMessage()));
		}
		return result;
	}
	
	public String getMapValue(Map<String, Object> map, String key){
		String resultStr = map.get(key) == null ? "" :  map.get(key)+"";
		return resultStr;
	}
}
