/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.BookDAO;

import com.onway.fyapp.common.dal.dataobject.BookDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.BookDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/vr_book.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisBookDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisBookDAO extends SqlMapClientDaoSupport implements BookDAO {
	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from vr_book</tt>
	 *
	 *	@param bookName
	 *	@return List<BookDO>
	 *	@throws DataAccessException
	 */	 
    public List<BookDO> queryBook(String bookName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("bookName", bookName);

        return getSqlMapClientTemplate().queryForList("MS-BOOK-QUERY-BOOK", param);

    }

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, BOOK_ID, BOOK_NAME, BOOK_IMG, BOOK_PUBLISH, BOOK_SIZE, NOW_NETWORK, DOWNLOAD_URL, DOWNLOAD_COUNT, CAN_DOWNLOAD, PRICE, BOOK_HEAT, GMT_CREATE, GMT_MODIFIED from vr_book where (BOOK_ID = ?)</tt>
	 *
	 *	@param bookId
	 *	@return BookDO
	 *	@throws DataAccessException
	 */	 
    public BookDO queryBookById(String bookId) throws DataAccessException {

 
        return (BookDO) getSqlMapClientTemplate().queryForObject("MS-BOOK-QUERY-BOOK-BY-ID", bookId);

    }

	/**
	 *  Update DB table <tt>vr_book</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update vr_book set DOWNLOAD_COUNT=(DOWNLOAD_COUNT + 1) where (BOOK_ID = ?)</tt>
	 *
	 *	@param bookId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateDownCount(String bookId) throws DataAccessException {

        return getSqlMapClientTemplate().update("MS-BOOK-UPDATE-DOWN-COUNT", bookId);
    }

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from vr_book</tt>
	 *
	 *	@param offset
	 *	@param limit
	 *	@return List<BookDO>
	 *	@throws DataAccessException
	 */	 
    public List<BookDO> recommendBook(int offset, int limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("offset", new Integer(offset));
        param.put("limit", new Integer(limit));

        return getSqlMapClientTemplate().queryForList("MS-BOOK-RECOMMEND-BOOK", param);

    }

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from vr_book</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int bookCount() throws DataAccessException {


	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-BOOK-BOOK-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

}