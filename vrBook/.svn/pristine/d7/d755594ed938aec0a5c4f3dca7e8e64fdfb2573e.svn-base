/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.UserDAO;

import com.onway.fyapp.common.dal.dataobject.UserDO;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.UserDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_user.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisUserDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisUserDAO extends SqlMapClientDaoSupport implements UserDAO {
	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user</tt>
	 *
	 *	@param userId
	 *	@param openId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO searchByUserIdOrOpenId(String userId, String openId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("openId", openId);

        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-SEARCH-BY-USER-ID-OR-OPEN-ID", param);

    }

	/**
	 *  Insert one <tt>UserDO</tt> object to DB table <tt>hqyt_user</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_user(USER_ID,OPEN_ID,HEAD_URL,CELL,NICK_NAME,SEX,AGE,CERT_NO,COM_NAME,DEL_FLG,LOGIN_PSW,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int creat(UserDO user) throws DataAccessException {
    	if (user == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-USER-CREAT", user);

        return user.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user</tt>
	 *
	 *	@param userId
	 *	@param type
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String getUserSingleInfo(String userId, String type) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("type", type);

        return (String) getSqlMapClientTemplate().queryForObject("MS-USER-GET-USER-SINGLE-INFO", param);

    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set HEAD_URL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param headUrl
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateHeadUrl(String headUrl, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("headUrl", headUrl);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-HEAD-URL", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set CELL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param cell
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCell(String cell, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("cell", cell);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-CELL", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set NICK_NAME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param nickName
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateNickName(String nickName, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("nickName", nickName);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-NICK-NAME", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set SEX=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param sex
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateSex(String sex, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("sex", sex);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-SEX", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set AGE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param age
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateAge(int age, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("age", new Integer(age));
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-AGE", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set CERT_NO=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param certNo
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCertNo(String certNo, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("certNo", certNo);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-CERT-NO", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set COM_NAME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param comName
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateComName(String comName, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("comName", comName);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-COM-NAME", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set LOGIN_PSW=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param loginPsw
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateLoginPwd(String loginPsw, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("loginPsw", loginPsw);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-LOGIN-PWD", param);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set LOGIN_PSW=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (CELL = ?)</tt>
	 *
	 *	@param loginPsw
	 *	@param cell
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateLoginPwdByCell(String loginPsw, String cell) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("loginPsw", loginPsw);
        param.put("cell", cell);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-LOGIN-PWD-BY-CELL", param);
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO checkCell(String userId, String cell) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("cell", cell);

        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-CHECK-CELL", param);

    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set HEAD_URL=?, NICK_NAME=?, SEX=?, DEL_FLG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserInfo(UserDO user) throws DataAccessException {
    	if (user == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-USER-UPDATE-USER-INFO", user);
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set USER_LEVEL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param userLevel
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserLevel(int userLevel, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("userLevel", new Integer(userLevel));
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-USER-LEVEL", param);
    }

}