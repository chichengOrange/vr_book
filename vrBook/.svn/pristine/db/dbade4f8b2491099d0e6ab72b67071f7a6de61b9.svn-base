/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.daointerface;

import com.onway.fyapp.common.dal.dataobject.BookDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import com.onway.common.lang.Money;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>vr_book</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/vr_book.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: BookDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface BookDAO {
	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from vr_book</tt>
	 *
	 *	@param searchValue
	 *	@param type
	 *	@return List<BookDO>
	 *	@throws DataAccessException
	 */	 
    public List<BookDO> queryBook(String searchValue, String type) throws DataAccessException;

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, BOOK_ID, BOOK_NAME, BOOK_IMG, BOOK_AUTHOR, BOOK_PUBLISH, BOOK_SIZE, BOOK_HEAT, NOW_NETWORK, DOWNLOAD_URL, DOWNLOAD_COUNT, CAN_DOWNLOAD, PRICE, DISTRIBUTOR, GMT_CREATE, GMT_MODIFIED from vr_book where (BOOK_ID = ?)</tt>
	 *
	 *	@param bookId
	 *	@return BookDO
	 *	@throws DataAccessException
	 */	 
    public BookDO queryBookById(String bookId) throws DataAccessException;

	/**
	 *  Update DB table <tt>vr_book</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update vr_book set DOWNLOAD_COUNT=(DOWNLOAD_COUNT + 1) where (BOOK_ID = ?)</tt>
	 *
	 *	@param bookId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateDownCount(String bookId) throws DataAccessException;

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from vr_book</tt>
	 *
	 *	@param offset
	 *	@param limit
	 *	@return List<BookDO>
	 *	@throws DataAccessException
	 */	 
    public List<BookDO> recommendBook(int offset, int limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>vr_book</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from vr_book</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int bookCount() throws DataAccessException;

}