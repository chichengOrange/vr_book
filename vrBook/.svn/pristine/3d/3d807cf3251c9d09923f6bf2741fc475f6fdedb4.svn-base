/**
 * onway.com Inc.
 * Copyright (c) 2016-2016 All Rights Reserved.
 */
package com.onway.web.controller.wechat.auth;

import java.io.IOException;
import java.text.MessageFormat;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import com.alibaba.fastjson.JSON;
import com.onway.common.lang.HttpUtils;
import com.onway.common.lang.StringUtils;
import com.onway.core.service.localcache.enums.SysConfigCacheKeyEnum;
import com.onway.fyapp.common.dal.dataobject.UserDO;
import com.onway.platform.common.base.BaseResult;
import com.onway.platform.common.base.QueryResult;
import com.onway.utils.UserInfo;
import com.onway.web.controller.AbstractController;
import com.onway.web.controller.wechat.accessToken.AccessToken;

/**
 * 
* <p>Title: WeChatAuth</p>  
* <p>Description: </p>  
* @author yugang.ni  
* @date 2018年6月27日  下午1:37:31
 */
@Controller
public class WeChatAuth extends AbstractController {
	
	
	/**
	 * 微信点击菜单链接   默认授权
	 * @param request
	 * @param response
	 */
	@RequestMapping("/snsapiBaseUrl.do")
	public void redirectUrl(final HttpServletRequest request,
			final HttpServletResponse response) {
		try {
		String redirectUrl = "getAuthCode.do";
		String state = "snsapiBase";
		String appid = sysConfigCacheManager
				.getConfigValue(SysConfigCacheKeyEnum.WE_APP_PAY_APP_ID);
		String menu_severUrl = sysConfigCacheManager
				.getConfigValue(SysConfigCacheKeyEnum.MENU_SERVERURL);//ip 端口
		String url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid="
				+ appid
				+ "&redirect_uri="
				+ menu_severUrl
				+ redirectUrl
				+ "&response_type=code&scope=snsapi_base&state="
				+ state
				+ "#wechat_redirect";
	    response.sendRedirect(url);
		} catch (IOException e) {
			logger.info(MessageFormat.format(
					"静默授权异常! err:{0}",
					new Object[] { e.getMessage()}));
		}
	}
	
	/**
	 * 微信授权重定向地址   默认授权
	 * @param request
	 * @param modelMap
	 * @param response
	 */
	@RequestMapping("/getAuthCode.do")
	public void getPayAuthCode(final HttpServletRequest request,
			final ModelMap modelMap, final HttpServletResponse response) {
		try {
			Map<String, String> map = new HashMap<String, String>();
			String code = request.getParameter("code");
			String appid = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.WE_APP_PAY_APP_ID);
			String appKey = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.WE_PAY_APP_SECRET_ID);
			map.put("appid", appid);
			map.put("secret", appKey);
			map.put("code", code);
			map.put("grant_type", "authorization_code");
			String accessTokenUrl = "https://api.weixin.qq.com/sns/oauth2/access_token";

			String resultStr = HttpUtils.executePostMethod(accessTokenUrl,
					"UTF-8", map);
			AccessToken at = JSON.parseObject(resultStr, AccessToken.class);
			if (null != at) {
				QueryResult<UserDO> queryResult = userQueryService.searchByUserIdOrOpenId(null, at.getOpenid());
				if(queryResult.isSuccess()){
					UserDO userDO = queryResult.getResultObject();
					if (null != userDO) {
						//有用户
						request.getSession().setAttribute("userId",
								userDO.getUserId());
					}else{
						BaseResult newUser = userOperationService.newUser(at.getOpenid());
						if(newUser.isSuccess()){
							QueryResult<UserDO> searchUser = userQueryService.searchByUserIdOrOpenId(null, at.getOpenid());
							if(searchUser.isSuccess() && null != searchUser.getResultObject()){
								userOperationService.newUserAccount(searchUser.getResultObject().getUserId());
								request.getSession().setAttribute("userId",
										searchUser.getResultObject().getUserId());
							}
						}
					}
				}
			}
			response.sendRedirect(sysConfigCacheManager.getConfigValue(SysConfigCacheKeyEnum.WECHAT_INDEX_URL));
		} catch (Exception e) {
			logger.info(MessageFormat.format(
					"获取授权信息异常! err:{0}",
					new Object[] { e.getMessage()}));
		}
	}
	
	/**
	 * 微信点击菜单链接   默认授权
	 * @param request
	 * @param response
	 */
	@RequestMapping("/snsapiUserInfoUrl.do")
	public void redirectShareUrl(final HttpServletRequest request,
			final HttpServletResponse response) {
		try {
			String redirectUrl = "getAuthCodeShare.do";
			String state = "snsapiUserInfo";
			String appid = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.WE_APP_PAY_APP_ID);
			String menu_severUrl = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.MENU_SERVERURL);//ip 端口
			String url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid="
					+ appid
					+ "&redirect_uri="
					+ menu_severUrl
					+ redirectUrl
					+ "&response_type=code&scope=snsapi_userinfo&state="
					+ state
					+ "#wechat_redirect";
			response.sendRedirect(url);
		} catch (IOException e) {
			logger.info(MessageFormat.format(
					"默认授权异常! err:{0}",
					new Object[] { e.getMessage()}));
		}
	}

	/**
	 * 微信授权重定向地址   信息授权
	 * @param request
	 * @param modelMap
	 * @param response
	 */
	@RequestMapping("/getAuthCodeShare.do")
	public void getAuthCodeShare(final HttpServletRequest request,
			final ModelMap modelMap, final HttpServletResponse response) {
		try {
			
			Map<String, String> map = new HashMap<String, String>();
			String code = request.getParameter("code");
			String appid = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.WE_APP_PAY_APP_ID);
			String appKey = sysConfigCacheManager
					.getConfigValue(SysConfigCacheKeyEnum.WE_PAY_APP_SECRET_ID);
			map.put("appid", appid);
			map.put("secret", appKey);
			map.put("code", code);
			map.put("grant_type", "authorization_code");
			String accessTokenUrl = "https://api.weixin.qq.com/sns/oauth2/access_token";

			String resultStr = HttpUtils.executePostMethod(accessTokenUrl,
					"UTF-8", map);
			AccessToken at = JSON.parseObject(resultStr, AccessToken.class);
			if (null != at) {
				logger.info(MessageFormat.format(
						"获取授权信息! appid:{0}, AccessToken:{1},state:{2}",
						new Object[] { appid, at}));
				if(StringUtils.isNotBlank(at.getOpenid())){
					QueryResult<UserDO> queryResult = userQueryService.searchByUserIdOrOpenId(null, at.getOpenid());
					if(queryResult.isSuccess()){
						//拉取 用户信息
						String getInfoUrl = "https://api.weixin.qq.com/sns/userinfo?access_token="
		                        + at.getAccess_token() + "&openid=" + at.getOpenid() + "&lang=zh_CN";
	                    String resultInfo = HttpUtils.executeGetMethod(getInfoUrl, "UTF-8", null);
	                    UserInfo userInfo = JSON.parseObject(resultInfo, UserInfo.class);
	                    
						UserDO userDO = queryResult.getResultObject();
						if (null != userDO) {
							//有用户
							request.getSession().setAttribute("userId",
									userDO.getUserId());
							//更新用户信息
							userOperationService.updateUserInfo(userInfo, userDO.getUserId());
						}else{
		                    BaseResult newUser = userOperationService.newUser(userInfo);
		                    if(newUser.isSuccess()){
								QueryResult<UserDO> searchUser = userQueryService
										.searchByUserIdOrOpenId(null,
												at.getOpenid());
								if(searchUser.isSuccess() && null != searchUser.getResultObject()){
									userOperationService.newUserAccount(searchUser.getResultObject().getUserId());
									request.getSession().setAttribute("userId",
											searchUser.getResultObject().getUserId());
								}
							}
						}
					}
				}
			}
			response.sendRedirect(sysConfigCacheManager.getConfigValue(SysConfigCacheKeyEnum.WECHAT_INDEX_URL));
		} catch (Exception e) {
			logger.info(MessageFormat.format(
					"获取授权信息异常! err:{0}",
					new Object[] { e.getMessage()}));
		}
	}
}
