/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.AccountDAO;

import com.onway.fyapp.common.dal.dataobject.AccountDO;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.AccountDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_account.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisAccountDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisAccountDAO extends SqlMapClientDaoSupport implements AccountDAO {
	/**
	 *  Query DB table <tt>hqyt_account</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account</tt>
	 *
	 *	@param userId
	 *	@param accountNo
	 *	@return AccountDO
	 *	@throws DataAccessException
	 */	 
    public AccountDO searchByUserIdOrAccountNo(String userId, String accountNo) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("accountNo", accountNo);

        return (AccountDO) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-SEARCH-BY-USER-ID-OR-ACCOUNT-NO", param);

    }

	/**
	 *  Insert one <tt>AccountDO</tt> object to DB table <tt>hqyt_account</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_account(ACCOUNT_NO,USER_ID,TEAM_ID,DEVOTE_AMOUNT,HU_BALANCE,HU_POINT,DEL_FLG,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param account
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int creat(AccountDO account) throws DataAccessException {
    	if (account == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-ACCOUNT-CREAT", account);

        return account.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_account</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account</tt>
	 *
	 *	@param userId
	 *	@param type
	 *	@return AccountDO
	 *	@throws DataAccessException
	 */	 
    public AccountDO queryByUserId(String userId, String type) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("type", type);

        return (AccountDO) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-QUERY-BY-USER-ID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_account</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account</tt>
	 *
	 *	@param teamId
	 *	@param type
	 *	@return AccountDO
	 *	@throws DataAccessException
	 */	 
    public AccountDO queryByTeamId(String teamId, String type) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("type", type);

        return (AccountDO) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-QUERY-BY-TEAM-ID", param);

    }

}