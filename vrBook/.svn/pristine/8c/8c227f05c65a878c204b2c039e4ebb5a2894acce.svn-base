/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.daointerface;

import com.onway.fyapp.common.dal.dataobject.KnowledgeDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>hqyt_knowledge</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_knowledge.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: KnowledgeDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface KnowledgeDAO {
	/**
	 *  Query DB table <tt>hqyt_knowledge</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_knowledge</tt>
	 *
	 *	@param type
	 *	@param delFlg
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<KnowledgeDO>
	 *	@throws DataAccessException
	 */	 
    public List<KnowledgeDO> queryKnowledge(String type, String delFlg, Integer startRow, Integer pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>hqyt_knowledge</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_knowledge</tt>
	 *
	 *	@param type
	 *	@param delFlg
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int queryKnowledgeCount(String type, String delFlg) throws DataAccessException;

	/**
	 *  Update DB table <tt>hqyt_knowledge</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_knowledge set PRAISE_COUNT=(PRAISE_COUNT + 1), GMT_MODIFIED=CURRENT_TIMESTAMP where (KNOW_ID = ?)</tt>
	 *
	 *	@param knowId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addPraiseCount(String knowId) throws DataAccessException;

	/**
	 *  Update DB table <tt>hqyt_knowledge</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_knowledge set PRAISE_COUNT=(PRAISE_COUNT - 1), GMT_MODIFIED=CURRENT_TIMESTAMP where (KNOW_ID = ?)</tt>
	 *
	 *	@param knowId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int canclePraiseCount(String knowId) throws DataAccessException;

	/**
	 *  Update DB table <tt>hqyt_knowledge</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_knowledge set COMMENT_COUNT=(COMMENT_COUNT + 1), GMT_MODIFIED=CURRENT_TIMESTAMP where (KNOW_ID = ?)</tt>
	 *
	 *	@param knowId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addCommentCount(String knowId) throws DataAccessException;

	/**
	 *  Query DB table <tt>hqyt_knowledge</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_knowledge</tt>
	 *
	 *	@param knowId
	 *	@return KnowledgeDO
	 *	@throws DataAccessException
	 */	 
    public KnowledgeDO queryKnowledgeDetails(String knowId) throws DataAccessException;

}