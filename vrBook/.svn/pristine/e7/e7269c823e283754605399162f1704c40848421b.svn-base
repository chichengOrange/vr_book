/**
 * onway.com Inc.
 * Copyright (c) 2013-2013 All Rights Reserved.
 */
package com.onway.web.controller.home;

import java.text.MessageFormat;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.onway.model.enums.StatusEnum;
import com.onway.platform.common.base.QueryResult;
import com.onway.platform.common.exception.BaseRuntimeException;
import com.onway.platform.common.utils.LogUtil;
import com.onway.web.controller.AbstractController;
import com.onway.web.controller.result.ActivityResult;
import com.onway.web.controller.result.JsonPageResult;
import com.onway.web.controller.result.JsonResult;

/**
 * 
* <p>Title: ActivityController</p>  
* <p>Description: 活动</p>  
* @author yugang.ni  
* @date 2018年6月28日  下午3:40:36
 */
@Controller
public class ActivityController extends AbstractController {
	
	private static final Logger log = Logger.getLogger(ActivityController.class);
	
	/**
	 * 首页活动查询
	 * @param request
	 * @return
	 */
	@RequestMapping("/activityQuery.do")
	@ResponseBody
	public Object activityQuery(HttpServletRequest request){
		
		String type = "";
		
		int pageSize = adjustPageSize(request);
		int pageNum = adjustPageNo(request);
		
		JsonPageResult<ActivityResult> jsonPageResult = new JsonPageResult<ActivityResult>(
				false);
		try {
			type = request.getParameter("type");

			Integer startRow = (pageNum - 1) * pageSize;
			
			QueryResult<List<ActivityResult>> queryActivity = activityQueryService.queryActivity(type, StatusEnum.ENABLED.getCode(), startRow, pageSize);
			
			int count = activityQueryService.queryActivityCount(type, StatusEnum.ENABLED.getCode());

			// 【2】分页判断
			jsonPageResult.setNext(count > pageSize * pageNum ? true : false);
			jsonPageResult.setTotalPages(calculatePage(count, pageSize));
			jsonPageResult.setListObject(queryActivity.getResultObject());
			jsonPageResult.setPageNum(pageNum);
			jsonPageResult.setBizSucc(queryActivity.isSuccess());
			
		} catch (BaseRuntimeException e) {
			LogUtil.error(log, MessageFormat.format(
					"活动列表查询失败，message:{0}", new Object[] { e.getMessage() }));
			return new JsonResult(false, "", e.getMessage());
		} catch (Exception e) {
			LogUtil.error(log, MessageFormat.format(
					"活动列表查询异常！message:{0}", new Object[] { e.getMessage() }));
			return new JsonResult(false, "", e.getMessage());
		}
		return jsonPageResult;
	}

	
}
